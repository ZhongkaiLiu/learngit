Git Notes:

1. Init a repo: $ git init

2. Add to stage: $ git add <filename>

3. Commit: $ git commit -m "comments here"

4. Check status: $ git status

5. Compare difference between work dir and stage: $ git diff
   Compare difference between work dir and HEAD: $ git diff HEAD
   Compare difference between work dir and stage for a specific file: $ git diff <filename>
   Compare difference between work dir and HEAD for a specific files: $ git diff HEAD -- <filename>   

6. Change version: $ git reset --hard <commit_id>
   <commit_id> can be 
   HEAD^ for previous 1st commit
   HEAD^^ for previous 2nd commit
   ...
   HEAD~100 for previous 100th commit

7. Check commit log: $ git log, to check the previous <commit_id>

8. Check command log: $ git reflog, to know the future <commit_id>

9. Working Directory => Stage => Branch(master)

10. Git tracks changes of files, not files.
    Only changes that are staged ($git add) can be commited to branch

11. Discard changes in working directory: $ git restore <filename>

12. Unstage changes in stage: $ git restore --staged <filename>

13. To completely discard changes in staged change (i.e. go to committed version):
    First, unstage changes: $ git restore --staged <filename>
    Second, discard changes in work dir: $ git restore <filename>

14. Delete files: 
    1. remove file, then update stage:
        1. $ rm <filename>
        2. $ git add/rm <filename>
	3. $ git commit -m "comments here"
    2. remove file and update stage at the same time
	1. $ git rm <filename>
	2. $ git commit -m "comments here"
15. Remote Repo:
    1. Connect to a remote repo: $ git remote add origin git@github.com:ZhongkaiLiu/learngit.git
    2. First time push: $ git push -u origin master
    3. Later push: $ git push origin master

16. Clone remote Repo:
    1. Clone a remote repo to local: $ git clone git@github.com:ZhongkaiLiu/gitskills.git

17. Branch:
    1. Create new branch: $ git branch <branch_name>
    2. Switch to another branch: $ git switch <branch_name> OR $ git checkout <branch_name>
    3. Create and switch new branch: $ git switch -c <branch_name> OR $ git checkout -b <branch_name>
    4. View all branches: $ git branch
    5. Merge other branch to current branch: $ git merge <branch_name>
    6. Delete branch: $ git branch -d <branch_name>

18. Branch Merge Conflict:
    1. when merge conflict occurs, open the file and fix the conflict
    2. show merge graph: $ git log --graph --pretty=oneline --abbrev-commit





